/* Generated by re2c 1.1.1 on Wed Apr 10 17:37:11 2019 */
#pragma once

#include <ciso646>
#include <iostream>

namespace simo
{

namespace shapes
{

/*!
 * @brief a Well-known text (WKT) markup language lexer
 *
 * @since 0.0.1
 */
class WktLexer
{
  public:

    /*!
     * @brief creates a wkt lexer from the given source
     * @param source the source string
     *
     * @since 0.0.1
     */
    WktLexer(const char* source)
        : content(source)
    {
        start = cursor = source;
        limit          = content + strlen(source);
    }

    /*!
     * @brief scan the next token
     * @return the numeric token identifier
     *
     * @since 0.0.1
     */
    int scan()
    {

        /// pointer for backtracking information
        const char* marker = nullptr;

        start = cursor;

        
{
	char yych;
	unsigned int yyaccept = 0;
	static const unsigned char yybm[] = {
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0, 128, 128,   0,   0, 128,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		128,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		 64,  64,  64,  64,  64,  64,  64,  64, 
		 64,  64,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
	};
	yych = *cursor;
	if (yych <= '0') {
		if (yych <= ' ') {
			if (yych <= '\n') {
				if (yych <= 0x00) goto shapes_wkt_lexer_2;
				if (yych <= 0x08) goto shapes_wkt_lexer_4;
				goto shapes_wkt_lexer_6;
			} else {
				if (yych == '\r') goto shapes_wkt_lexer_6;
				if (yych <= 0x1F) goto shapes_wkt_lexer_4;
				goto shapes_wkt_lexer_6;
			}
		} else {
			if (yych <= '+') {
				if (yych <= '\'') goto shapes_wkt_lexer_4;
				if (yych <= '(') goto shapes_wkt_lexer_8;
				if (yych <= ')') goto shapes_wkt_lexer_10;
				goto shapes_wkt_lexer_4;
			} else {
				if (yych <= ',') goto shapes_wkt_lexer_12;
				if (yych <= '-') goto shapes_wkt_lexer_14;
				if (yych <= '/') goto shapes_wkt_lexer_4;
				goto shapes_wkt_lexer_15;
			}
		}
	} else {
		if (yych <= 'P') {
			if (yych <= 'K') {
				if (yych <= '9') goto shapes_wkt_lexer_17;
				if (yych == 'E') goto shapes_wkt_lexer_19;
				goto shapes_wkt_lexer_4;
			} else {
				if (yych <= 'L') goto shapes_wkt_lexer_20;
				if (yych <= 'M') goto shapes_wkt_lexer_21;
				if (yych <= 'O') goto shapes_wkt_lexer_4;
				goto shapes_wkt_lexer_22;
			}
		} else {
			if (yych <= 'l') {
				if (yych == 'e') goto shapes_wkt_lexer_19;
				if (yych <= 'k') goto shapes_wkt_lexer_4;
				goto shapes_wkt_lexer_20;
			} else {
				if (yych <= 'm') goto shapes_wkt_lexer_21;
				if (yych == 'p') goto shapes_wkt_lexer_22;
				goto shapes_wkt_lexer_4;
			}
		}
	}
shapes_wkt_lexer_2:
	++cursor;
	{ return WKT_END_OF_INPUT; }
shapes_wkt_lexer_4:
	++cursor;
shapes_wkt_lexer_5:
	{ return WKT_PARSE_ERROR; }
shapes_wkt_lexer_6:
	++cursor;
	{ return scan(); }
shapes_wkt_lexer_8:
	++cursor;
	{ return WKT_LPAREN; }
shapes_wkt_lexer_10:
	++cursor;
	{ return WKT_RPAREN; }
shapes_wkt_lexer_12:
	++cursor;
	{ return WKT_COMMA; }
shapes_wkt_lexer_14:
	yych = *++cursor;
	if (yych <= '/') goto shapes_wkt_lexer_5;
	if (yych <= '0') goto shapes_wkt_lexer_15;
	if (yych <= '9') goto shapes_wkt_lexer_17;
	goto shapes_wkt_lexer_5;
shapes_wkt_lexer_15:
	yyaccept = 0;
	yych = *(marker = ++cursor);
	if (yych <= 'D') {
		if (yych == '.') goto shapes_wkt_lexer_23;
	} else {
		if (yych <= 'E') goto shapes_wkt_lexer_25;
		if (yych == 'e') goto shapes_wkt_lexer_25;
	}
shapes_wkt_lexer_16:
	{ return WKT_NUM; }
shapes_wkt_lexer_17:
	yyaccept = 0;
	yych = *(marker = ++cursor);
	if (yybm[0+yych] & 64) {
		goto shapes_wkt_lexer_17;
	}
	if (yych <= 'D') {
		if (yych == '.') goto shapes_wkt_lexer_23;
		goto shapes_wkt_lexer_16;
	} else {
		if (yych <= 'E') goto shapes_wkt_lexer_25;
		if (yych == 'e') goto shapes_wkt_lexer_25;
		goto shapes_wkt_lexer_16;
	}
shapes_wkt_lexer_19:
	yyaccept = 1;
	yych = *(marker = ++cursor);
	if (yych == 'M') goto shapes_wkt_lexer_26;
	if (yych == 'm') goto shapes_wkt_lexer_26;
	goto shapes_wkt_lexer_5;
shapes_wkt_lexer_20:
	yyaccept = 1;
	yych = *(marker = ++cursor);
	if (yych == 'I') goto shapes_wkt_lexer_27;
	if (yych == 'i') goto shapes_wkt_lexer_27;
	goto shapes_wkt_lexer_5;
shapes_wkt_lexer_21:
	yyaccept = 1;
	yych = *(marker = ++cursor);
	if (yych == 'U') goto shapes_wkt_lexer_28;
	if (yych == 'u') goto shapes_wkt_lexer_28;
	goto shapes_wkt_lexer_5;
shapes_wkt_lexer_22:
	yyaccept = 1;
	yych = *(marker = ++cursor);
	if (yych == 'O') goto shapes_wkt_lexer_29;
	if (yych == 'o') goto shapes_wkt_lexer_29;
	goto shapes_wkt_lexer_5;
shapes_wkt_lexer_23:
	yych = *++cursor;
	if (yych <= '/') goto shapes_wkt_lexer_24;
	if (yych <= '9') goto shapes_wkt_lexer_30;
shapes_wkt_lexer_24:
	cursor = marker;
	if (yyaccept <= 2) {
		if (yyaccept <= 1) {
			if (yyaccept == 0) {
				goto shapes_wkt_lexer_16;
			} else {
				goto shapes_wkt_lexer_5;
			}
		} else {
			goto shapes_wkt_lexer_48;
		}
	} else {
		if (yyaccept <= 4) {
			if (yyaccept == 3) {
				goto shapes_wkt_lexer_70;
			} else {
				goto shapes_wkt_lexer_73;
			}
		} else {
			goto shapes_wkt_lexer_95;
		}
	}
shapes_wkt_lexer_25:
	yych = *++cursor;
	if (yych <= ',') {
		if (yych == '+') goto shapes_wkt_lexer_32;
		goto shapes_wkt_lexer_24;
	} else {
		if (yych <= '-') goto shapes_wkt_lexer_32;
		if (yych <= '/') goto shapes_wkt_lexer_24;
		if (yych <= '9') goto shapes_wkt_lexer_33;
		goto shapes_wkt_lexer_24;
	}
shapes_wkt_lexer_26:
	yych = *++cursor;
	if (yych == 'P') goto shapes_wkt_lexer_35;
	if (yych == 'p') goto shapes_wkt_lexer_35;
	goto shapes_wkt_lexer_24;
shapes_wkt_lexer_27:
	yych = *++cursor;
	if (yych == 'N') goto shapes_wkt_lexer_36;
	if (yych == 'n') goto shapes_wkt_lexer_36;
	goto shapes_wkt_lexer_24;
shapes_wkt_lexer_28:
	yych = *++cursor;
	if (yych == 'L') goto shapes_wkt_lexer_37;
	if (yych == 'l') goto shapes_wkt_lexer_37;
	goto shapes_wkt_lexer_24;
shapes_wkt_lexer_29:
	yych = *++cursor;
	if (yych == 'I') goto shapes_wkt_lexer_38;
	if (yych == 'i') goto shapes_wkt_lexer_38;
	goto shapes_wkt_lexer_24;
shapes_wkt_lexer_30:
	yyaccept = 0;
	yych = *(marker = ++cursor);
	if (yych <= 'D') {
		if (yych <= '/') goto shapes_wkt_lexer_16;
		if (yych <= '9') goto shapes_wkt_lexer_30;
		goto shapes_wkt_lexer_16;
	} else {
		if (yych <= 'E') goto shapes_wkt_lexer_25;
		if (yych == 'e') goto shapes_wkt_lexer_25;
		goto shapes_wkt_lexer_16;
	}
shapes_wkt_lexer_32:
	yych = *++cursor;
	if (yych <= '/') goto shapes_wkt_lexer_24;
	if (yych >= ':') goto shapes_wkt_lexer_24;
shapes_wkt_lexer_33:
	yych = *++cursor;
	if (yych <= '/') goto shapes_wkt_lexer_16;
	if (yych <= '9') goto shapes_wkt_lexer_33;
	goto shapes_wkt_lexer_16;
shapes_wkt_lexer_35:
	yych = *++cursor;
	if (yych == 'T') goto shapes_wkt_lexer_39;
	if (yych == 't') goto shapes_wkt_lexer_39;
	goto shapes_wkt_lexer_24;
shapes_wkt_lexer_36:
	yych = *++cursor;
	if (yych == 'E') goto shapes_wkt_lexer_40;
	if (yych == 'e') goto shapes_wkt_lexer_40;
	goto shapes_wkt_lexer_24;
shapes_wkt_lexer_37:
	yych = *++cursor;
	if (yych == 'T') goto shapes_wkt_lexer_41;
	if (yych == 't') goto shapes_wkt_lexer_41;
	goto shapes_wkt_lexer_24;
shapes_wkt_lexer_38:
	yych = *++cursor;
	if (yych == 'N') goto shapes_wkt_lexer_42;
	if (yych == 'n') goto shapes_wkt_lexer_42;
	goto shapes_wkt_lexer_24;
shapes_wkt_lexer_39:
	yych = *++cursor;
	if (yych == 'Y') goto shapes_wkt_lexer_43;
	if (yych == 'y') goto shapes_wkt_lexer_43;
	goto shapes_wkt_lexer_24;
shapes_wkt_lexer_40:
	yych = *++cursor;
	if (yych == 'S') goto shapes_wkt_lexer_45;
	if (yych == 's') goto shapes_wkt_lexer_45;
	goto shapes_wkt_lexer_24;
shapes_wkt_lexer_41:
	yych = *++cursor;
	if (yych == 'I') goto shapes_wkt_lexer_46;
	if (yych == 'i') goto shapes_wkt_lexer_46;
	goto shapes_wkt_lexer_24;
shapes_wkt_lexer_42:
	yych = *++cursor;
	if (yych == 'T') goto shapes_wkt_lexer_47;
	if (yych == 't') goto shapes_wkt_lexer_47;
	goto shapes_wkt_lexer_24;
shapes_wkt_lexer_43:
	++cursor;
	{ return WKT_EMPTY_SET; }
shapes_wkt_lexer_45:
	yych = *++cursor;
	if (yych == 'T') goto shapes_wkt_lexer_49;
	if (yych == 't') goto shapes_wkt_lexer_49;
	goto shapes_wkt_lexer_24;
shapes_wkt_lexer_46:
	yych = *++cursor;
	if (yych <= 'P') {
		if (yych == 'L') goto shapes_wkt_lexer_50;
		if (yych <= 'O') goto shapes_wkt_lexer_24;
		goto shapes_wkt_lexer_51;
	} else {
		if (yych <= 'l') {
			if (yych <= 'k') goto shapes_wkt_lexer_24;
			goto shapes_wkt_lexer_50;
		} else {
			if (yych == 'p') goto shapes_wkt_lexer_51;
			goto shapes_wkt_lexer_24;
		}
	}
shapes_wkt_lexer_47:
	yyaccept = 2;
	yych = *(marker = ++cursor);
	if (yybm[0+yych] & 128) {
		goto shapes_wkt_lexer_52;
	}
	if (yych <= 'Z') {
		if (yych == 'M') goto shapes_wkt_lexer_54;
		if (yych >= 'Z') goto shapes_wkt_lexer_56;
	} else {
		if (yych <= 'm') {
			if (yych >= 'm') goto shapes_wkt_lexer_54;
		} else {
			if (yych == 'z') goto shapes_wkt_lexer_56;
		}
	}
shapes_wkt_lexer_48:
	{ return WKT_POINT_TAGGED_TEXT; }
shapes_wkt_lexer_49:
	yych = *++cursor;
	if (yych == 'R') goto shapes_wkt_lexer_58;
	if (yych == 'r') goto shapes_wkt_lexer_58;
	goto shapes_wkt_lexer_24;
shapes_wkt_lexer_50:
	yych = *++cursor;
	if (yych == 'I') goto shapes_wkt_lexer_59;
	if (yych == 'i') goto shapes_wkt_lexer_59;
	goto shapes_wkt_lexer_24;
shapes_wkt_lexer_51:
	yych = *++cursor;
	if (yych == 'O') goto shapes_wkt_lexer_60;
	if (yych == 'o') goto shapes_wkt_lexer_60;
	goto shapes_wkt_lexer_24;
shapes_wkt_lexer_52:
	yych = *++cursor;
	if (yybm[0+yych] & 128) {
		goto shapes_wkt_lexer_52;
	}
	if (yych <= 'Z') {
		if (yych == 'M') goto shapes_wkt_lexer_54;
		if (yych <= 'Y') goto shapes_wkt_lexer_24;
		goto shapes_wkt_lexer_56;
	} else {
		if (yych <= 'm') {
			if (yych <= 'l') goto shapes_wkt_lexer_24;
		} else {
			if (yych == 'z') goto shapes_wkt_lexer_56;
			goto shapes_wkt_lexer_24;
		}
	}
shapes_wkt_lexer_54:
	++cursor;
	{ return WKT_POINT_M_TAGGED_TEXT; }
shapes_wkt_lexer_56:
	yych = *++cursor;
	if (yych == 'M') goto shapes_wkt_lexer_61;
	if (yych == 'm') goto shapes_wkt_lexer_61;
	{ return WKT_POINT_Z_TAGGED_TEXT; }
shapes_wkt_lexer_58:
	yych = *++cursor;
	if (yych == 'I') goto shapes_wkt_lexer_63;
	if (yych == 'i') goto shapes_wkt_lexer_63;
	goto shapes_wkt_lexer_24;
shapes_wkt_lexer_59:
	yych = *++cursor;
	if (yych == 'N') goto shapes_wkt_lexer_64;
	if (yych == 'n') goto shapes_wkt_lexer_64;
	goto shapes_wkt_lexer_24;
shapes_wkt_lexer_60:
	yych = *++cursor;
	if (yych == 'I') goto shapes_wkt_lexer_65;
	if (yych == 'i') goto shapes_wkt_lexer_65;
	goto shapes_wkt_lexer_24;
shapes_wkt_lexer_61:
	++cursor;
	{ return WKT_POINT_ZM_TAGGED_TEXT; }
shapes_wkt_lexer_63:
	yych = *++cursor;
	if (yych == 'N') goto shapes_wkt_lexer_66;
	if (yych == 'n') goto shapes_wkt_lexer_66;
	goto shapes_wkt_lexer_24;
shapes_wkt_lexer_64:
	yych = *++cursor;
	if (yych == 'E') goto shapes_wkt_lexer_67;
	if (yych == 'e') goto shapes_wkt_lexer_67;
	goto shapes_wkt_lexer_24;
shapes_wkt_lexer_65:
	yych = *++cursor;
	if (yych == 'N') goto shapes_wkt_lexer_68;
	if (yych == 'n') goto shapes_wkt_lexer_68;
	goto shapes_wkt_lexer_24;
shapes_wkt_lexer_66:
	yych = *++cursor;
	if (yych == 'G') goto shapes_wkt_lexer_69;
	if (yych == 'g') goto shapes_wkt_lexer_69;
	goto shapes_wkt_lexer_24;
shapes_wkt_lexer_67:
	yych = *++cursor;
	if (yych == 'S') goto shapes_wkt_lexer_71;
	if (yych == 's') goto shapes_wkt_lexer_71;
	goto shapes_wkt_lexer_24;
shapes_wkt_lexer_68:
	yych = *++cursor;
	if (yych == 'T') goto shapes_wkt_lexer_72;
	if (yych == 't') goto shapes_wkt_lexer_72;
	goto shapes_wkt_lexer_24;
shapes_wkt_lexer_69:
	yyaccept = 3;
	yych = *(marker = ++cursor);
	if (yych <= 'L') {
		if (yych <= '\f') {
			if (yych <= 0x08) goto shapes_wkt_lexer_70;
			if (yych <= '\n') goto shapes_wkt_lexer_74;
		} else {
			if (yych <= '\r') goto shapes_wkt_lexer_74;
			if (yych == ' ') goto shapes_wkt_lexer_74;
		}
	} else {
		if (yych <= 'l') {
			if (yych <= 'M') goto shapes_wkt_lexer_76;
			if (yych == 'Z') goto shapes_wkt_lexer_78;
		} else {
			if (yych <= 'm') goto shapes_wkt_lexer_76;
			if (yych == 'z') goto shapes_wkt_lexer_78;
		}
	}
shapes_wkt_lexer_70:
	{ return WKT_LINESTRING_TAGGED_TEXT; }
shapes_wkt_lexer_71:
	yych = *++cursor;
	if (yych == 'T') goto shapes_wkt_lexer_80;
	if (yych == 't') goto shapes_wkt_lexer_80;
	goto shapes_wkt_lexer_24;
shapes_wkt_lexer_72:
	yyaccept = 4;
	yych = *(marker = ++cursor);
	if (yych <= 'L') {
		if (yych <= '\f') {
			if (yych <= 0x08) goto shapes_wkt_lexer_73;
			if (yych <= '\n') goto shapes_wkt_lexer_81;
		} else {
			if (yych <= '\r') goto shapes_wkt_lexer_81;
			if (yych == ' ') goto shapes_wkt_lexer_81;
		}
	} else {
		if (yych <= 'l') {
			if (yych <= 'M') goto shapes_wkt_lexer_83;
			if (yych == 'Z') goto shapes_wkt_lexer_85;
		} else {
			if (yych <= 'm') goto shapes_wkt_lexer_83;
			if (yych == 'z') goto shapes_wkt_lexer_85;
		}
	}
shapes_wkt_lexer_73:
	{ return WKT_MULTIPOINT_TAGGED_TEXT; }
shapes_wkt_lexer_74:
	yych = *++cursor;
	if (yych <= 'L') {
		if (yych <= '\f') {
			if (yych <= 0x08) goto shapes_wkt_lexer_24;
			if (yych <= '\n') goto shapes_wkt_lexer_74;
			goto shapes_wkt_lexer_24;
		} else {
			if (yych <= '\r') goto shapes_wkt_lexer_74;
			if (yych == ' ') goto shapes_wkt_lexer_74;
			goto shapes_wkt_lexer_24;
		}
	} else {
		if (yych <= 'l') {
			if (yych <= 'M') goto shapes_wkt_lexer_76;
			if (yych == 'Z') goto shapes_wkt_lexer_78;
			goto shapes_wkt_lexer_24;
		} else {
			if (yych <= 'm') goto shapes_wkt_lexer_76;
			if (yych == 'z') goto shapes_wkt_lexer_78;
			goto shapes_wkt_lexer_24;
		}
	}
shapes_wkt_lexer_76:
	++cursor;
	{ return WKT_LINESTRING_M_TAGGED_TEXT; }
shapes_wkt_lexer_78:
	yych = *++cursor;
	if (yych == 'M') goto shapes_wkt_lexer_87;
	if (yych == 'm') goto shapes_wkt_lexer_87;
	{ return WKT_LINESTRING_Z_TAGGED_TEXT; }
shapes_wkt_lexer_80:
	yych = *++cursor;
	if (yych == 'R') goto shapes_wkt_lexer_89;
	if (yych == 'r') goto shapes_wkt_lexer_89;
	goto shapes_wkt_lexer_24;
shapes_wkt_lexer_81:
	yych = *++cursor;
	if (yych <= 'L') {
		if (yych <= '\f') {
			if (yych <= 0x08) goto shapes_wkt_lexer_24;
			if (yych <= '\n') goto shapes_wkt_lexer_81;
			goto shapes_wkt_lexer_24;
		} else {
			if (yych <= '\r') goto shapes_wkt_lexer_81;
			if (yych == ' ') goto shapes_wkt_lexer_81;
			goto shapes_wkt_lexer_24;
		}
	} else {
		if (yych <= 'l') {
			if (yych <= 'M') goto shapes_wkt_lexer_83;
			if (yych == 'Z') goto shapes_wkt_lexer_85;
			goto shapes_wkt_lexer_24;
		} else {
			if (yych <= 'm') goto shapes_wkt_lexer_83;
			if (yych == 'z') goto shapes_wkt_lexer_85;
			goto shapes_wkt_lexer_24;
		}
	}
shapes_wkt_lexer_83:
	++cursor;
	{ return WKT_MULTIPOINT_M_TAGGED_TEXT; }
shapes_wkt_lexer_85:
	yych = *++cursor;
	if (yych == 'M') goto shapes_wkt_lexer_90;
	if (yych == 'm') goto shapes_wkt_lexer_90;
	{ return WKT_MULTIPOINT_Z_TAGGED_TEXT; }
shapes_wkt_lexer_87:
	++cursor;
	{ return WKT_LINESTRING_ZM_TAGGED_TEXT; }
shapes_wkt_lexer_89:
	yych = *++cursor;
	if (yych == 'I') goto shapes_wkt_lexer_92;
	if (yych == 'i') goto shapes_wkt_lexer_92;
	goto shapes_wkt_lexer_24;
shapes_wkt_lexer_90:
	++cursor;
	{ return WKT_MULTIPOINT_ZM_TAGGED_TEXT; }
shapes_wkt_lexer_92:
	yych = *++cursor;
	if (yych == 'N') goto shapes_wkt_lexer_93;
	if (yych != 'n') goto shapes_wkt_lexer_24;
shapes_wkt_lexer_93:
	yych = *++cursor;
	if (yych == 'G') goto shapes_wkt_lexer_94;
	if (yych != 'g') goto shapes_wkt_lexer_24;
shapes_wkt_lexer_94:
	yyaccept = 5;
	yych = *(marker = ++cursor);
	if (yych <= 'L') {
		if (yych <= '\f') {
			if (yych <= 0x08) goto shapes_wkt_lexer_95;
			if (yych <= '\n') goto shapes_wkt_lexer_96;
		} else {
			if (yych <= '\r') goto shapes_wkt_lexer_96;
			if (yych == ' ') goto shapes_wkt_lexer_96;
		}
	} else {
		if (yych <= 'l') {
			if (yych <= 'M') goto shapes_wkt_lexer_98;
			if (yych == 'Z') goto shapes_wkt_lexer_100;
		} else {
			if (yych <= 'm') goto shapes_wkt_lexer_98;
			if (yych == 'z') goto shapes_wkt_lexer_100;
		}
	}
shapes_wkt_lexer_95:
	{ return WKT_MULTILINESTRING_TAGGED_TEXT; }
shapes_wkt_lexer_96:
	yych = *++cursor;
	if (yych <= 'L') {
		if (yych <= '\f') {
			if (yych <= 0x08) goto shapes_wkt_lexer_24;
			if (yych <= '\n') goto shapes_wkt_lexer_96;
			goto shapes_wkt_lexer_24;
		} else {
			if (yych <= '\r') goto shapes_wkt_lexer_96;
			if (yych == ' ') goto shapes_wkt_lexer_96;
			goto shapes_wkt_lexer_24;
		}
	} else {
		if (yych <= 'l') {
			if (yych <= 'M') goto shapes_wkt_lexer_98;
			if (yych == 'Z') goto shapes_wkt_lexer_100;
			goto shapes_wkt_lexer_24;
		} else {
			if (yych <= 'm') goto shapes_wkt_lexer_98;
			if (yych == 'z') goto shapes_wkt_lexer_100;
			goto shapes_wkt_lexer_24;
		}
	}
shapes_wkt_lexer_98:
	++cursor;
	{ return WKT_MULTILINESTRING_M_TAGGED_TEXT; }
shapes_wkt_lexer_100:
	yych = *++cursor;
	if (yych == 'M') goto shapes_wkt_lexer_102;
	if (yych == 'm') goto shapes_wkt_lexer_102;
	{ return WKT_MULTILINESTRING_Z_TAGGED_TEXT; }
shapes_wkt_lexer_102:
	++cursor;
	{ return WKT_MULTILINESTRING_ZM_TAGGED_TEXT; }
}

    }

    /*!
     * @brief returns the current token string
     * @return the token string
     *
     * @since 0.0.1
     */
    std::string get_token() const
    {
        return std::string(reinterpret_cast<const char*>(start), static_cast<size_t>(cursor - start));
    }

  private:
    /// pointer to the buffer
    const char* content = nullptr;

    /// pointer to the beginning of the current token
    const char* start = nullptr;

    /// pointer to the current token
    const char* cursor = nullptr;

    /// pointer to the end of the buffer
    const char* limit = nullptr;
};

}  // namespace shapes
}  // namespace simo