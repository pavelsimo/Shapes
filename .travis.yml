language: cpp
dist: xenial
sudo: false

matrix:
  include:

    # codecov, doxygen docs

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-8', 'ninja-build']
      env:
        - SHAPES_CXX=g++-8
        - SHAPES_CC=gcc-8
        - SHAPES_DOC=true
        - SHAPES_ENABLE_COVERAGE=ON
        - GIT_NAME=travis-ci
        - GIT_EMAIL=pavel.simo@gmail.com
        - GITHUB_REPO=pavelsimo/pavelsimo.github.io
        - GIT_SOURCE=docs
        - GIT_BRANCH=master

      after_success:
        - cd build
        - bash <(curl -s https://codecov.io/bash)
        - if [ "$TRAVIS_BRANCH" = "master" -a "$TRAVIS_PULL_REQUEST" = "false" ]; then mv docs/html docs/shapes && rm -rf docs/latex && bash "$TRAVIS_BUILD_DIR/thirdparty/git-update-ghpages/git-update-ghpages" -e; fi
        - cd ..

    # osx clang

    - os: osx
      osx_image: xcode7.3

    - os: osx
      osx_image: xcode8

    - os: osx
      osx_image: xcode8.3

    - os: osx
      osx_image: xcode9

    - os: osx
      osx_image: xcode9.1

    - os: osx
      osx_image: xcode9.2

    - os: osx
      osx_image: xcode9.3

    - os: osx
      osx_image: xcode9.4

    - os: osx
      osx_image: xcode10

    - os: osx
      osx_image: xcode10.1

    - os: osx
      osx_image: xcode10.2

    # linux gcc

    - os: linux
      compiler: gcc
      env:
        - SHAPES_CXX=g++-4.9
        - SHAPES_CC=gcc-4.9
        - CXXFLAGS=-std=c++11
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-4.9', 'ninja-build']

    - os: linux
      compiler: gcc
      env:
        - SHAPES_CXX=g++-5
        - SHAPES_CC=gcc-5
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-5', 'ninja-build']

    - os: linux
      compiler: gcc
      env:
        - SHAPES_CXX=g++-6
        - SHAPES_CC=gcc-6
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-6', 'ninja-build']

    - os: linux
      compiler: gcc
      env:
        - SHAPES_CXX=g++-7
        - SHAPES_CC=gcc-7
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-7', 'ninja-build']

    - os: linux
      compiler: gcc
      env:
        - SHAPES_CXX=g++-8
        - SHAPES_CC=gcc-8
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-8', 'ninja-build']

    # linux clang

    - os: linux
      compiler: clang
      env:
        - SHAPES_CXX=clang++-3.5
        - SHAPES_CC=clang-3.5
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-precise-3.5']
          packages: ['g++-6', 'clang-3.5', 'ninja-build']

    - os: linux
      compiler: clang
      env:
        - SHAPES_CXX=clang++-3.6
        - SHAPES_CC=clang-3.6
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-precise-3.6']
          packages: ['g++-6', 'clang-3.6', 'ninja-build']

    - os: linux
      compiler: clang
      env:
        - SHAPES_CXX=clang++-3.7
        - SHAPES_CC=clang-3.7
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-precise-3.7']
          packages: ['g++-6', 'clang-3.7', 'ninja-build']

    - os: linux
      compiler: clang
      env:
        - SHAPES_CXX=clang++-3.8
        - SHAPES_CC=clang-3.8
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-6', 'clang-3.8', 'ninja-build']

    - os: linux
      compiler: clang
      env:
        - SHAPES_CXX=clang++-3.9
        - SHAPES_CC=clang-3.9
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-6', 'clang-3.9', 'ninja-build']

    - os: linux
      compiler: clang
      env:
        - SHAPES_CXX=clang++-4.0
        - SHAPES_CC=clang-4.0
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-trusty-4.0']
          packages: ['g++-6', 'clang-4.0', 'ninja-build']

    - os: linux
      compiler: clang
      env:
        - SHAPES_CXX=clang++-5.0
        - SHAPES_CC=clang-5.0
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-xenial-5.0']
          packages: ['g++-6', 'clang-5.0', 'ninja-build']

    - os: linux
      compiler: clang
      env:
        - SHAPES_CXX=clang++-6.0
        - SHAPES_CC=clang-6.0
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-xenial-6.0']
          packages: ['g++-6', 'clang-6.0', 'ninja-build']

install:
- |
  if [[ (-x $(which brew)) ]]; then
    brew update
    brew install cmake ninja
    brew upgrade cmake
    if [[ "${SHAPES_DOC}" != "" ]]; then brew install doxygen; fi
    cmake --version
  else
    if [[ "${SHAPES_DOC}" != "" ]]; then sudo apt-get install doxygen; fi
  fi

- if [[ "${SHAPES_CXX}" != "" ]]; then export CXX=${SHAPES_CXX}; export CC=${SHAPES_CC}; fi
- $CC --version
- $CXX --version

script:
- mkdir -p build && cd build
- cmake -GNinja ..
- cmake --build . -- -j2
- if [[ "${SHAPES_DOC}" != "" ]]; then cmake --build . --target shapes_documentation; fi
- ctest --output-on-failure --verbose -j2
- cd ..

